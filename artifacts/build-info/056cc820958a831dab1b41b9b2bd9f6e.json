{
	"id": "056cc820958a831dab1b41b9b2bd9f6e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"example-code.sol": {
				"content": "pragma solidity ^0.5.0;\r\n/**\r\n* @title Supply Chain\r\n* @author Alberto Cuesta Canada\r\n* @notice Implements a basic compositional supply chain contract.\r\n*/\r\ncontract SupplyChain {\r\n   event StepCreated(uint256 step);   \r\n   /**\r\n    * @notice Supply chain step data. By chaining these and not \r\n    * allowing them to be modified afterwards we create an Acyclic\r\n    * Directed Graph.\r\n    * @dev The step id is not stored in the Step itself because it\r\n    * is always previously available to whoever looks for the step.\r\n    * @param creator The creator of this step.\r\n    * @param item The id of the object that this step refers to.\r\n    * @param precedents The step ids preceding this one in the\r\n    * supply chain.\r\n    */\r\n   struct Step {\r\n       address creator;\r\n       uint256 item;\r\n       uint256[] precedents;\r\n   }   /**\r\n    * @notice All steps are accessible through a mapping keyed by\r\n    * the step ids. Recursive structs are not supported in solidity.\r\n    */\r\n   mapping(uint256 => Step) public steps;   /**\r\n    * @notice Step counter\r\n    */\r\n   uint256 public totalSteps;   /**\r\n    * @notice Mapping from item id to the last step in the lifecycle \r\n    * of that item.\r\n    */\r\n   mapping(uint256 => uint256) public lastSteps;\r\n\r\n   /**\r\n    * @notice A method to create a new supply chain step. The \r\n    * msg.sender is recorded as the creator of the step, which might\r\n    * possibly mean creator of the underlying asset as well.\r\n    * @param _item The item id that this step is for. This must be\r\n    * either the item of one of the steps in _precedents, or an id\r\n    * that has never been used before.\r\n    * @param _precedents An array of the step ids for steps\r\n    * considered to be predecessors to this one. Often this would \r\n    * just mean that the event refers to the same asset as the event \r\n    * pointed to, but for other steps it could point to other\r\n    * different assets.\r\n    * @return The step id of the step created.\r\n    */\r\n   function newStep(uint256 _item, uint256[] memory _precedents)\r\n       public\r\n       returns(uint256)\r\n   {\r\n       for (uint i = 0; i < _precedents.length; i++){\r\n           require(\r\n               isLastStep(_precedents[i]), \r\n               \"Append only on last steps.\"\r\n           );\r\n       }\r\n       bool repeatInstance = false;\r\n       for (uint i = 0; i < _precedents.length; i++){\r\n           if (steps[_precedents[i]].item == _item) {\r\n               repeatInstance = true;\r\n               break;\r\n           }\r\n       }\r\n       if (!repeatInstance){\r\n           require(lastSteps[_item] == 0, \"Instance not valid.\");\r\n       }\r\n      \r\n       steps[totalSteps] = Step(\r\n           msg.sender,\r\n           _item,\r\n           _precedents\r\n       );\r\n       uint256 step = totalSteps;\r\n       totalSteps += 1;\r\n       lastSteps[_item] = step;\r\n       emit StepCreated(step);\r\n       return step;\r\n   }   /**\r\n    * @notice A method to verify whether a step is the last of an \r\n    * item.\r\n    * @param _step The step id of the step to verify.\r\n    * @return Whether a step is the last of an item.\r\n    */\r\n   function isLastStep(uint256 _step)\r\n       public\r\n       view\r\n       returns(bool)\r\n   {\r\n       return lastSteps[steps[_step].item] == _step;\r\n   }   /**\r\n    * @notice A method to retrieve the precedents of a step.\r\n    * @param _step The step id of the step to retrieve precedents\r\n    * for.\r\n    * @return An array with the step ids of the precedent steps.\r\n    */\r\n   function getprecedents(uint256 _step)\r\n       public\r\n       view\r\n       returns(uint256[] memory)\r\n   {\r\n       return steps[_step].precedents;\r\n   }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"example-code.sol": {
				"SupplyChain": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "step",
									"type": "uint256"
								}
							],
							"name": "StepCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_step",
									"type": "uint256"
								}
							],
							"name": "getprecedents",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_step",
									"type": "uint256"
								}
							],
							"name": "isLastStep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "lastSteps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_item",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "_precedents",
									"type": "uint256[]"
								}
							],
							"name": "newStep",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "steps",
							"outputs": [
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "item",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSteps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Alberto Cuesta Canada",
						"methods": {
							"getprecedents(uint256)": {
								"params": {
									"_step": "The step id of the step to retrieve precedents for."
								},
								"return": "An array with the step ids of the precedent steps."
							},
							"isLastStep(uint256)": {
								"params": {
									"_step": "The step id of the step to verify."
								},
								"return": "Whether a step is the last of an item."
							},
							"newStep(uint256,uint256[])": {
								"params": {
									"_item": "The item id that this step is for. This must be either the item of one of the steps in _precedents, or an id that has never been used before.",
									"_precedents": "An array of the step ids for steps considered to be predecessors to this one. Often this would  just mean that the event refers to the same asset as the event  pointed to, but for other steps it could point to other different assets."
								},
								"return": "The step id of the step created."
							}
						},
						"title": "Supply Chain"
					},
					"evm": {
						"assembly": "    /* \"example-code.sol\":157:3632  contract SupplyChain {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"example-code.sol\":157:3632  contract SupplyChain {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"example-code.sol\":157:3632  contract SupplyChain {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"example-code.sol\":157:3632  contract SupplyChain {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3b37986e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5f63690c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6931b3ae\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6f0e823d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7217e0b9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x97add3a5\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"example-code.sol\":1207:1251  mapping(uint256 => uint256) public lastSteps */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"example-code.sol\":1207:1251  mapping(uint256 => uint256) public lastSteps */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-code.sol\":1983:2893  function newStep(uint256 _item, uint256[] memory _precedents)\r... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"example-code.sol\":1983:2893  function newStep(uint256 _item, uint256[] memory _precedents)\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"example-code.sol\":1983:2893  function newStep(uint256 _item, uint256[] memory _precedents)\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"example-code.sol\":1983:2893  function newStep(uint256 _item, uint256[] memory _precedents)\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_16:\n        /* \"example-code.sol\":1983:2893  function newStep(uint256 _item, uint256[] memory _precedents)\r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"example-code.sol\":1983:2893  function newStep(uint256 _item, uint256[] memory _precedents)\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-code.sol\":1070:1095  uint256 public totalSteps */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-code.sol\":3102:3252  function isLastStep(uint256 _step)\r... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"example-code.sol\":3102:3252  function isLastStep(uint256 _step)\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-code.sol\":985:1022  mapping(uint256 => Step) public steps */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"example-code.sol\":985:1022  mapping(uint256 => Step) public steps */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-code.sol\":3478:3629  function getprecedents(uint256 _step)\r... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"example-code.sol\":3478:3629  function getprecedents(uint256 _step)\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_29:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_29)\n    tag_31:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"example-code.sol\":3478:3629  function getprecedents(uint256 _step)\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"example-code.sol\":1207:1251  mapping(uint256 => uint256) public lastSteps */\n    tag_11:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"example-code.sol\":1983:2893  function newStep(uint256 _item, uint256[] memory _precedents)\r... */\n    tag_17:\n        /* \"example-code.sol\":2076:2083  uint256 */\n      0x00\n        /* \"example-code.sol\":2104:2110  uint i */\n      dup1\n        /* \"example-code.sol\":2113:2114  0 */\n      0x00\n        /* \"example-code.sol\":2104:2114  uint i = 0 */\n      swap1\n      pop\n        /* \"example-code.sol\":2099:2281  for (uint i = 0; i < _precedents.length; i++){\r... */\n    tag_33:\n        /* \"example-code.sol\":2120:2131  _precedents */\n      dup3\n        /* \"example-code.sol\":2120:2138  _precedents.length */\n      mload\n        /* \"example-code.sol\":2116:2117  i */\n      dup2\n        /* \"example-code.sol\":2116:2138  i < _precedents.length */\n      lt\n        /* \"example-code.sol\":2099:2281  for (uint i = 0; i < _precedents.length; i++){\r... */\n      iszero\n      tag_34\n      jumpi\n        /* \"example-code.sol\":2183:2209  isLastStep(_precedents[i]) */\n      tag_36\n        /* \"example-code.sol\":2194:2205  _precedents */\n      dup4\n        /* \"example-code.sol\":2206:2207  i */\n      dup3\n        /* \"example-code.sol\":2194:2208  _precedents[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"example-code.sol\":2183:2193  isLastStep */\n      tag_22\n        /* \"example-code.sol\":2183:2209  isLastStep(_precedents[i]) */\n      jump\t// in\n    tag_36:\n        /* \"example-code.sol\":2158:2270  require(\r... */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x417070656e64206f6e6c79206f6e206c6173742073746570732e000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"example-code.sol\":2140:2143  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"example-code.sol\":2099:2281  for (uint i = 0; i < _precedents.length; i++){\r... */\n      jump(tag_33)\n    tag_34:\n      pop\n        /* \"example-code.sol\":2290:2309  bool repeatInstance */\n      0x00\n        /* \"example-code.sol\":2312:2317  false */\n      dup1\n        /* \"example-code.sol\":2290:2317  bool repeatInstance = false */\n      swap1\n      pop\n        /* \"example-code.sol\":2332:2338  uint i */\n      0x00\n        /* \"example-code.sol\":2341:2342  0 */\n      dup1\n        /* \"example-code.sol\":2332:2342  uint i = 0 */\n      swap1\n      pop\n        /* \"example-code.sol\":2327:2514  for (uint i = 0; i < _precedents.length; i++){\r... */\n    tag_39:\n        /* \"example-code.sol\":2348:2359  _precedents */\n      dup4\n        /* \"example-code.sol\":2348:2366  _precedents.length */\n      mload\n        /* \"example-code.sol\":2344:2345  i */\n      dup2\n        /* \"example-code.sol\":2344:2366  i < _precedents.length */\n      lt\n        /* \"example-code.sol\":2327:2514  for (uint i = 0; i < _precedents.length; i++){\r... */\n      iszero\n      tag_40\n      jumpi\n        /* \"example-code.sol\":2420:2425  _item */\n      dup5\n        /* \"example-code.sol\":2390:2395  steps */\n      0x00\n        /* \"example-code.sol\":2390:2411  steps[_precedents[i]] */\n      dup1\n        /* \"example-code.sol\":2396:2407  _precedents */\n      dup7\n        /* \"example-code.sol\":2408:2409  i */\n      dup5\n        /* \"example-code.sol\":2396:2410  _precedents[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"example-code.sol\":2390:2411  steps[_precedents[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"example-code.sol\":2390:2416  steps[_precedents[i]].item */\n      0x01\n      add\n      sload\n        /* \"example-code.sol\":2390:2425  steps[_precedents[i]].item == _item */\n      eq\n        /* \"example-code.sol\":2386:2504  if (steps[_precedents[i]].item == _item) {\r... */\n      iszero\n      tag_43\n      jumpi\n        /* \"example-code.sol\":2462:2466  true */\n      0x01\n        /* \"example-code.sol\":2445:2466  repeatInstance = true */\n      swap2\n      pop\n        /* \"example-code.sol\":2484:2489  break */\n      jump(tag_40)\n        /* \"example-code.sol\":2386:2504  if (steps[_precedents[i]].item == _item) {\r... */\n    tag_43:\n        /* \"example-code.sol\":2368:2371  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"example-code.sol\":2327:2514  for (uint i = 0; i < _precedents.length; i++){\r... */\n      jump(tag_39)\n    tag_40:\n      pop\n        /* \"example-code.sol\":2528:2542  repeatInstance */\n      dup1\n        /* \"example-code.sol\":2523:2621  if (!repeatInstance){\r... */\n      tag_44\n      jumpi\n        /* \"example-code.sol\":2585:2586  0 */\n      0x00\n        /* \"example-code.sol\":2565:2574  lastSteps */\n      0x02\n        /* \"example-code.sol\":2565:2581  lastSteps[_item] */\n      0x00\n        /* \"example-code.sol\":2575:2580  _item */\n      dup7\n        /* \"example-code.sol\":2565:2581  lastSteps[_item] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"example-code.sol\":2565:2586  lastSteps[_item] == 0 */\n      eq\n        /* \"example-code.sol\":2557:2610  require(lastSteps[_item] == 0, \"Instance not valid.\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e7374616e6365206e6f742076616c69642e00000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"example-code.sol\":2523:2621  if (!repeatInstance){\r... */\n    tag_44:\n        /* \"example-code.sol\":2658:2740  Step(\r... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"example-code.sol\":2676:2686  msg.sender */\n      caller\n        /* \"example-code.sol\":2658:2740  Step(\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"example-code.sol\":2700:2705  _item */\n      dup6\n        /* \"example-code.sol\":2658:2740  Step(\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"example-code.sol\":2719:2730  _precedents */\n      dup5\n        /* \"example-code.sol\":2658:2740  Step(\r... */\n      dup2\n      mstore\n      pop\n        /* \"example-code.sol\":2638:2643  steps */\n      0x00\n        /* \"example-code.sol\":2638:2655  steps[totalSteps] */\n      dup1\n        /* \"example-code.sol\":2644:2654  totalSteps */\n      sload(0x01)\n        /* \"example-code.sol\":2638:2655  steps[totalSteps] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"example-code.sol\":2638:2740  steps[totalSteps] = Step(\r... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_46\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      pop\n      swap1\n      pop\n      pop\n        /* \"example-code.sol\":2750:2762  uint256 step */\n      0x00\n        /* \"example-code.sol\":2765:2775  totalSteps */\n      sload(0x01)\n        /* \"example-code.sol\":2750:2775  uint256 step = totalSteps */\n      swap1\n      pop\n        /* \"example-code.sol\":2799:2800  1 */\n      0x01\n        /* \"example-code.sol\":2785:2795  totalSteps */\n      dup1\n      0x00\n        /* \"example-code.sol\":2785:2800  totalSteps += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"example-code.sol\":2829:2833  step */\n      dup1\n        /* \"example-code.sol\":2810:2819  lastSteps */\n      0x02\n        /* \"example-code.sol\":2810:2826  lastSteps[_item] */\n      0x00\n        /* \"example-code.sol\":2820:2825  _item */\n      dup8\n        /* \"example-code.sol\":2810:2826  lastSteps[_item] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"example-code.sol\":2810:2833  lastSteps[_item] = step */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"example-code.sol\":2848:2865  StepCreated(step) */\n      0xaaf69ffc30ad71be68c47171203a5feb746c3881d2dc180dbbac3893a57c6a44\n        /* \"example-code.sol\":2860:2864  step */\n      dup2\n        /* \"example-code.sol\":2848:2865  StepCreated(step) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"example-code.sol\":2882:2886  step */\n      dup1\n        /* \"example-code.sol\":2875:2886  return step */\n      swap3\n      pop\n      pop\n      pop\n        /* \"example-code.sol\":1983:2893  function newStep(uint256 _item, uint256[] memory _precedents)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"example-code.sol\":1070:1095  uint256 public totalSteps */\n    tag_19:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"example-code.sol\":3102:3252  function isLastStep(uint256 _step)\r... */\n    tag_22:\n        /* \"example-code.sol\":3181:3185  bool */\n      0x00\n        /* \"example-code.sol\":3240:3245  _step */\n      dup2\n        /* \"example-code.sol\":3208:3217  lastSteps */\n      0x02\n        /* \"example-code.sol\":3208:3236  lastSteps[steps[_step].item] */\n      0x00\n        /* \"example-code.sol\":3218:3223  steps */\n      dup1\n        /* \"example-code.sol\":3218:3230  steps[_step] */\n      0x00\n        /* \"example-code.sol\":3224:3229  _step */\n      dup7\n        /* \"example-code.sol\":3218:3230  steps[_step] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"example-code.sol\":3218:3235  steps[_step].item */\n      0x01\n      add\n      sload\n        /* \"example-code.sol\":3208:3236  lastSteps[steps[_step].item] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"example-code.sol\":3208:3245  lastSteps[steps[_step].item] == _step */\n      eq\n        /* \"example-code.sol\":3201:3245  return lastSteps[steps[_step].item] == _step */\n      swap1\n      pop\n        /* \"example-code.sol\":3102:3252  function isLastStep(uint256 _step)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"example-code.sol\":985:1022  mapping(uint256 => Step) public steps */\n    tag_25:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"example-code.sol\":3478:3629  function getprecedents(uint256 _step)\r... */\n    tag_28:\n        /* \"example-code.sol\":3560:3576  uint256[] memory */\n      0x60\n        /* \"example-code.sol\":3599:3604  steps */\n      0x00\n        /* \"example-code.sol\":3599:3611  steps[_step] */\n      dup1\n        /* \"example-code.sol\":3605:3610  _step */\n      dup4\n        /* \"example-code.sol\":3599:3611  steps[_step] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"example-code.sol\":3599:3622  steps[_step].precedents */\n      0x02\n      add\n        /* \"example-code.sol\":3592:3622  return steps[_step].precedents */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_51:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_51\n      jumpi\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"example-code.sol\":3478:3629  function getprecedents(uint256 _step)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"example-code.sol\":157:3632  contract SupplyChain {\r... */\n    tag_47:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_52\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_53:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_54\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_53)\n    tag_54:\n    tag_52:\n      pop\n      swap1\n      pop\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      pop\n      swap1\n      jump\t// out\n    tag_56:\n      tag_57\n      swap2\n      swap1\n    tag_58:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_58)\n    tag_59:\n      pop\n      swap1\n      jump\n    tag_57:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820d7ded059766b80fa01b390d27425d6e3181709e786dbbb0117fc81511881ed8664736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610743806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633b37986e146100675780635f63690c146100a95780636931b3ae1461017f5780636f0e823d1461019d5780637217e0b9146101e357806397add3a514610258575b600080fd5b6100936004803603602081101561007d57600080fd5b81019080803590602001909291905050506102db565b6040518082815260200191505060405180910390f35b610169600480360360408110156100bf57600080fd5b8101908080359060200190929190803590602001906401000000008111156100e657600080fd5b8201836020820111156100f857600080fd5b8035906020019184602083028401116401000000008311171561011a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506102f3565b6040518082815260200191505060405180910390f35b6101876105b1565b6040518082815260200191505060405180910390f35b6101c9600480360360208110156101b357600080fd5b81019080803590602001909291905050506105b7565b604051808215151515815260200191505060405180910390f35b61020f600480360360208110156101f957600080fd5b81019080803590602001909291905050506105eb565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6102846004803603602081101561026e57600080fd5b810190808035906020019092919050505061062f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102c75780820151818401526020810190506102ac565b505050509050019250505060405180910390f35b60026020528060005260406000206000915090505481565b600080600090505b825181101561039f5761032083828151811061031357fe5b60200260200101516105b7565b610392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f417070656e64206f6e6c79206f6e206c6173742073746570732e00000000000081525060200191505060405180910390fd5b80806001019150506102fb565b50600080905060008090505b83518110156103fa57846000808684815181106103c457fe5b602002602001015181526020019081526020016000206001015414156103ed57600191506103fa565b80806001019150506103ab565b508061048a576000600260008681526020019081526020016000205414610489576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e7374616e6365206e6f742076616c69642e0000000000000000000000000081525060200191505060405180910390fd5b5b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815250600080600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908051906020019061053c92919061069c565b5090505060006001549050600180600082825401925050819055508060026000878152602001908152602001600020819055507faaf69ffc30ad71be68c47171203a5feb746c3881d2dc180dbbac3893a57c6a44816040518082815260200191505060405180910390a1809250505092915050565b60015481565b6000816002600080600086815260200190815260200160002060010154815260200190815260200160002054149050919050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b606060008083815260200190815260200160002060020180548060200260200160405190810160405280929190818152602001828054801561069057602002820191906000526020600020905b81548152602001906001019080831161067c575b50505050509050919050565b8280548282559060005260206000209081019282156106d8579160200282015b828111156106d75782518255916020019190600101906106bc565b5b5090506106e591906106e9565b5090565b61070b91905b808211156107075760008160009055506001016106ef565b5090565b9056fea265627a7a72315820d7ded059766b80fa01b390d27425d6e3181709e786dbbb0117fc81511881ed8664736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x743 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B37986E EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x5F63690C EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x6931B3AE EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6F0E823D EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x7217E0B9 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x97ADD3A5 EQ PUSH2 0x258 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2AC JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x39F JUMPI PUSH2 0x320 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x313 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x417070656E64206F6E6C79206F6E206C6173742073746570732E000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2FB JUMP JUMPDEST POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3FA JUMPI DUP5 PUSH1 0x0 DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3C4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x3ED JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x3FA JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x3AB JUMP JUMPDEST POP DUP1 PUSH2 0x48A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x489 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E7374616E6365206E6F742076616C69642E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x53C SWAP3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xAAF69FFC30AD71BE68C47171203A5FEB746C3881D2DC180DBBAC3893A57C6A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x690 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x67C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x6D8 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x6D7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x6E5 SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x70B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x707 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x6EF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD7 0xDE 0xD0 MSIZE PUSH23 0x6B80FA01B390D27425D6E3181709E786DBBB0117FC8151 XOR DUP2 0xED DUP7 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "157:3475:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;157:3475:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80633b37986e146100675780635f63690c146100a95780636931b3ae1461017f5780636f0e823d1461019d5780637217e0b9146101e357806397add3a514610258575b600080fd5b6100936004803603602081101561007d57600080fd5b81019080803590602001909291905050506102db565b6040518082815260200191505060405180910390f35b610169600480360360408110156100bf57600080fd5b8101908080359060200190929190803590602001906401000000008111156100e657600080fd5b8201836020820111156100f857600080fd5b8035906020019184602083028401116401000000008311171561011a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506102f3565b6040518082815260200191505060405180910390f35b6101876105b1565b6040518082815260200191505060405180910390f35b6101c9600480360360208110156101b357600080fd5b81019080803590602001909291905050506105b7565b604051808215151515815260200191505060405180910390f35b61020f600480360360208110156101f957600080fd5b81019080803590602001909291905050506105eb565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6102846004803603602081101561026e57600080fd5b810190808035906020019092919050505061062f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102c75780820151818401526020810190506102ac565b505050509050019250505060405180910390f35b60026020528060005260406000206000915090505481565b600080600090505b825181101561039f5761032083828151811061031357fe5b60200260200101516105b7565b610392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f417070656e64206f6e6c79206f6e206c6173742073746570732e00000000000081525060200191505060405180910390fd5b80806001019150506102fb565b50600080905060008090505b83518110156103fa57846000808684815181106103c457fe5b602002602001015181526020019081526020016000206001015414156103ed57600191506103fa565b80806001019150506103ab565b508061048a576000600260008681526020019081526020016000205414610489576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e7374616e6365206e6f742076616c69642e0000000000000000000000000081525060200191505060405180910390fd5b5b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815250600080600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908051906020019061053c92919061069c565b5090505060006001549050600180600082825401925050819055508060026000878152602001908152602001600020819055507faaf69ffc30ad71be68c47171203a5feb746c3881d2dc180dbbac3893a57c6a44816040518082815260200191505060405180910390a1809250505092915050565b60015481565b6000816002600080600086815260200190815260200160002060010154815260200190815260200160002054149050919050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b606060008083815260200190815260200160002060020180548060200260200160405190810160405280929190818152602001828054801561069057602002820191906000526020600020905b81548152602001906001019080831161067c575b50505050509050919050565b8280548282559060005260206000209081019282156106d8579160200282015b828111156106d75782518255916020019190600101906106bc565b5b5090506106e591906106e9565b5090565b61070b91905b808211156107075760008160009055506001016106ef565b5090565b9056fea265627a7a72315820d7ded059766b80fa01b390d27425d6e3181709e786dbbb0117fc81511881ed8664736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B37986E EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x5F63690C EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x6931B3AE EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6F0E823D EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x7217E0B9 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x97ADD3A5 EQ PUSH2 0x258 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2AC JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x39F JUMPI PUSH2 0x320 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x313 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x417070656E64206F6E6C79206F6E206C6173742073746570732E000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2FB JUMP JUMPDEST POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3FA JUMPI DUP5 PUSH1 0x0 DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3C4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x3ED JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x3FA JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x3AB JUMP JUMPDEST POP DUP1 PUSH2 0x48A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x489 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E7374616E6365206E6F742076616C69642E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x53C SWAP3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xAAF69FFC30AD71BE68C47171203A5FEB746C3881D2DC180DBBAC3893A57C6A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x690 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x67C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x6D8 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x6D7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x6E5 SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x70B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x707 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x6EF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD7 0xDE 0xD0 MSIZE PUSH23 0x6B80FA01B390D27425D6E3181709E786DBBB0117FC8151 XOR DUP2 0xED DUP7 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "157:3475:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;157:3475:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1207:44:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1983:910;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1983:910:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1983:910:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1983:910:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1983:910:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1983:910:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1070:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3102:150;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3102:150:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;985:37;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;985:37:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3478:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3478:151:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3478:151:0;;;;;;;;;;;;;;;;;1207:44;;;;;;;;;;;;;;;;;:::o;1983:910::-;2076:7;2104:6;2113:1;2104:10;;2099:182;2120:11;:18;2116:1;:22;2099:182;;;2183:26;2194:11;2206:1;2194:14;;;;;;;;;;;;;;2183:10;:26::i;:::-;2158:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2140:3;;;;;;;2099:182;;;;2290:19;2312:5;2290:27;;2332:6;2341:1;2332:10;;2327:187;2348:11;:18;2344:1;:22;2327:187;;;2420:5;2390;:21;2396:11;2408:1;2396:14;;;;;;;;;;;;;;2390:21;;;;;;;;;;;:26;;;:35;2386:118;;;2462:4;2445:21;;2484:5;;2386:118;2368:3;;;;;;;2327:187;;;;2528:14;2523:98;;2585:1;2565:9;:16;2575:5;2565:16;;;;;;;;;;;;:21;2557:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2523:98;2658:82;;;;;;;;2676:10;2658:82;;;;;;2700:5;2658:82;;;;2719:11;2658:82;;;2638:5;:17;2644:10;;2638:17;;;;;;;;;;;:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2750:12;2765:10;;2750:25;;2799:1;2785:10;;:15;;;;;;;;;;;2829:4;2810:9;:16;2820:5;2810:16;;;;;;;;;;;:23;;;;2848:17;2860:4;2848:17;;;;;;;;;;;;;;;;;;2882:4;2875:11;;;;1983:910;;;;:::o;1070:25::-;;;;:::o;3102:150::-;3181:4;3240:5;3208:9;:28;3218:5;:12;3224:5;3218:12;;;;;;;;;;;:17;;;3208:28;;;;;;;;;;;;:37;3201:44;;3102:150;;;:::o;985:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3478:151::-;3560:16;3599:5;:12;3605:5;3599:12;;;;;;;;;;;:23;;3592:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3478:151;;;:::o;157:3475::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "371800",
								"executionCost": "411",
								"totalCost": "372211"
							},
							"external": {
								"getprecedents(uint256)": "infinite",
								"isLastStep(uint256)": "2124",
								"lastSteps(uint256)": "1141",
								"newStep(uint256,uint256[])": "infinite",
								"steps(uint256)": "2123",
								"totalSteps()": "1027"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 157,
									"end": 3632,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 157,
									"end": 3632,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 157,
									"end": 3632,
									"name": "MSTORE"
								},
								{
									"begin": 157,
									"end": 3632,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 157,
									"end": 3632,
									"name": "POP"
								},
								{
									"begin": 157,
									"end": 3632,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 3632,
									"name": "DUP1"
								},
								{
									"begin": 157,
									"end": 3632,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 3632,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 157,
									"end": 3632,
									"name": "CODECOPY"
								},
								{
									"begin": 157,
									"end": 3632,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 157,
									"end": 3632,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820d7ded059766b80fa01b390d27425d6e3181709e786dbbb0117fc81511881ed8664736f6c63430005110032",
									".code": [
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "MSTORE"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "POP"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "LT"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPI"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SHR"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "3B37986E"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "EQ"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPI"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "5F63690C"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "EQ"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPI"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "6931B3AE"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "EQ"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPI"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "6F0E823D"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "EQ"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPI"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "7217E0B9"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "EQ"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPI"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "97ADD3A5"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "EQ"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPI"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "REVERT"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "JUMPDEST"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "DUP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "DUP2"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "ADD"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SWAP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "DUP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "DUP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SWAP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "ADD"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SWAP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SWAP3"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SWAP2"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SWAP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "POP"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "POP"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "POP"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "JUMPDEST"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "MLOAD"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "DUP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "DUP3"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "DUP2"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "MSTORE"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "ADD"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SWAP2"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "POP"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "POP"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "MLOAD"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "DUP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SWAP2"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SUB"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SWAP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "RETURN"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "JUMPDEST"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "ADD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "ADD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP3"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "ADD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP3"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "ADD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "MUL"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "ADD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "MLOAD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "ADD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "MSTORE"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP4"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP3"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "MSTORE"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "ADD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP4"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP4"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP3"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP3"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "JUMPDEST"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "MLOAD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP3"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "MSTORE"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "ADD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "MLOAD"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "DUP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SUB"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP1"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "RETURN"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "MLOAD"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "DUP3"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "DUP2"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "MSTORE"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "ADD"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "SWAP2"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "MLOAD"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "SWAP2"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "SUB"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "RETURN"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "JUMPDEST"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "DUP2"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "ADD"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "ADD"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SWAP3"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SWAP2"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "JUMPDEST"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "MLOAD"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "DUP3"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "ISZERO"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "ISZERO"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "ISZERO"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "ISZERO"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "DUP2"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "MSTORE"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "ADD"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SWAP2"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "MLOAD"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SWAP2"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SUB"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "RETURN"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "JUMPDEST"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP2"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "ADD"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "ADD"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP3"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP2"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "POP"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "POP"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "POP"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "JUMPDEST"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "MLOAD"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP4"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "AND"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "AND"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP2"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "MSTORE"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "ADD"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP3"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP2"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "MSTORE"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "ADD"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP3"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "POP"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "POP"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "POP"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "MLOAD"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP2"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SUB"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "RETURN"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "JUMPDEST"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP2"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "ADD"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "ADD"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP3"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP2"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "JUMPDEST"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "MLOAD"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "ADD"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP3"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP2"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SUB"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP3"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "MSTORE"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP4"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP2"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP2"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "MLOAD"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP2"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "MSTORE"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "ADD"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP2"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "MLOAD"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "ADD"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "MUL"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP4"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "ADD"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP3"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "MLOAD"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "DUP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP2"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SUB"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "RETURN"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "JUMPDEST"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "MSTORE"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "DUP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "MSTORE"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "KECCAK256"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SWAP2"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "POP"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SWAP1"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "POP"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "SLOAD"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "DUP2"
										},
										{
											"begin": 1207,
											"end": 1251,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "JUMPDEST"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2110,
											"name": "DUP1"
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2114,
											"name": "SWAP1"
										},
										{
											"begin": 2104,
											"end": 2114,
											"name": "POP"
										},
										{
											"begin": 2099,
											"end": 2281,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2099,
											"end": 2281,
											"name": "JUMPDEST"
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "DUP3"
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "MLOAD"
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "DUP2"
										},
										{
											"begin": 2116,
											"end": 2138,
											"name": "LT"
										},
										{
											"begin": 2099,
											"end": 2281,
											"name": "ISZERO"
										},
										{
											"begin": 2099,
											"end": 2281,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2099,
											"end": 2281,
											"name": "JUMPI"
										},
										{
											"begin": 2183,
											"end": 2209,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2194,
											"end": 2205,
											"name": "DUP4"
										},
										{
											"begin": 2206,
											"end": 2207,
											"name": "DUP3"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "DUP2"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "MLOAD"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "DUP2"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "LT"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "JUMPI"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "INVALID"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "JUMPDEST"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "MUL"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "ADD"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "ADD"
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "MLOAD"
										},
										{
											"begin": 2183,
											"end": 2193,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2183,
											"end": 2209,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2183,
											"end": 2209,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2183,
											"end": 2209,
											"name": "JUMPDEST"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "JUMPI"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "MLOAD"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "DUP3"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "SUB"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "DUP3"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "PUSH",
											"value": "417070656E64206F6E6C79206F6E206C6173742073746570732E000000000000"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "POP"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "SWAP2"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "POP"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "POP"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "MLOAD"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "SWAP2"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "SUB"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "SWAP1"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "REVERT"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2158,
											"end": 2270,
											"name": "JUMPDEST"
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "DUP1"
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "DUP1"
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "ADD"
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "SWAP2"
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "POP"
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "POP"
										},
										{
											"begin": 2099,
											"end": 2281,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2099,
											"end": 2281,
											"name": "JUMP"
										},
										{
											"begin": 2099,
											"end": 2281,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2099,
											"end": 2281,
											"name": "JUMPDEST"
										},
										{
											"begin": 2099,
											"end": 2281,
											"name": "POP"
										},
										{
											"begin": 2290,
											"end": 2309,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2317,
											"name": "DUP1"
										},
										{
											"begin": 2290,
											"end": 2317,
											"name": "SWAP1"
										},
										{
											"begin": 2290,
											"end": 2317,
											"name": "POP"
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2342,
											"name": "DUP1"
										},
										{
											"begin": 2332,
											"end": 2342,
											"name": "SWAP1"
										},
										{
											"begin": 2332,
											"end": 2342,
											"name": "POP"
										},
										{
											"begin": 2327,
											"end": 2514,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2327,
											"end": 2514,
											"name": "JUMPDEST"
										},
										{
											"begin": 2348,
											"end": 2359,
											"name": "DUP4"
										},
										{
											"begin": 2348,
											"end": 2366,
											"name": "MLOAD"
										},
										{
											"begin": 2344,
											"end": 2345,
											"name": "DUP2"
										},
										{
											"begin": 2344,
											"end": 2366,
											"name": "LT"
										},
										{
											"begin": 2327,
											"end": 2514,
											"name": "ISZERO"
										},
										{
											"begin": 2327,
											"end": 2514,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2514,
											"name": "JUMPI"
										},
										{
											"begin": 2420,
											"end": 2425,
											"name": "DUP5"
										},
										{
											"begin": 2390,
											"end": 2395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 2407,
											"name": "DUP7"
										},
										{
											"begin": 2408,
											"end": 2409,
											"name": "DUP5"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "DUP2"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "MLOAD"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "DUP2"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "LT"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "INVALID"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "JUMPDEST"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "MUL"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "ADD"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "ADD"
										},
										{
											"begin": 2396,
											"end": 2410,
											"name": "MLOAD"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "DUP2"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "MSTORE"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "ADD"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "SWAP1"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "DUP2"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "MSTORE"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "ADD"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2411,
											"name": "KECCAK256"
										},
										{
											"begin": 2390,
											"end": 2416,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2390,
											"end": 2416,
											"name": "ADD"
										},
										{
											"begin": 2390,
											"end": 2416,
											"name": "SLOAD"
										},
										{
											"begin": 2390,
											"end": 2425,
											"name": "EQ"
										},
										{
											"begin": 2386,
											"end": 2504,
											"name": "ISZERO"
										},
										{
											"begin": 2386,
											"end": 2504,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2386,
											"end": 2504,
											"name": "JUMPI"
										},
										{
											"begin": 2462,
											"end": 2466,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2445,
											"end": 2466,
											"name": "SWAP2"
										},
										{
											"begin": 2445,
											"end": 2466,
											"name": "POP"
										},
										{
											"begin": 2484,
											"end": 2489,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2489,
											"name": "JUMP"
										},
										{
											"begin": 2386,
											"end": 2504,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2386,
											"end": 2504,
											"name": "JUMPDEST"
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "DUP1"
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "DUP1"
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "ADD"
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "SWAP2"
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "POP"
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "POP"
										},
										{
											"begin": 2327,
											"end": 2514,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2327,
											"end": 2514,
											"name": "JUMP"
										},
										{
											"begin": 2327,
											"end": 2514,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2514,
											"name": "JUMPDEST"
										},
										{
											"begin": 2327,
											"end": 2514,
											"name": "POP"
										},
										{
											"begin": 2528,
											"end": 2542,
											"name": "DUP1"
										},
										{
											"begin": 2523,
											"end": 2621,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2523,
											"end": 2621,
											"name": "JUMPI"
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2574,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2580,
											"name": "DUP7"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "DUP2"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "MSTORE"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "ADD"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "SWAP1"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "DUP2"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "MSTORE"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "ADD"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "KECCAK256"
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "SLOAD"
										},
										{
											"begin": 2565,
											"end": 2586,
											"name": "EQ"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "JUMPI"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "MLOAD"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "DUP2"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "MSTORE"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "ADD"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "DUP1"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "DUP1"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "ADD"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "DUP3"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "DUP2"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "SUB"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "DUP3"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "MSTORE"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "DUP2"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "MSTORE"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "ADD"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "DUP1"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "PUSH",
											"value": "496E7374616E6365206E6F742076616C69642E00000000000000000000000000"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "DUP2"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "MSTORE"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "POP"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "ADD"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "SWAP2"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "POP"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "POP"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "MLOAD"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "DUP1"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "SWAP2"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "SUB"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "SWAP1"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "REVERT"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "JUMPDEST"
										},
										{
											"begin": 2523,
											"end": 2621,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2523,
											"end": 2621,
											"name": "JUMPDEST"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "MLOAD"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "DUP1"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "MSTORE"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "DUP1"
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "CALLER"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "AND"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "DUP2"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "MSTORE"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "DUP6"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "DUP2"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "MSTORE"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "DUP5"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "DUP2"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "MSTORE"
										},
										{
											"begin": 2658,
											"end": 2740,
											"name": "POP"
										},
										{
											"begin": 2638,
											"end": 2643,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "DUP1"
										},
										{
											"begin": 2644,
											"end": 2654,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2644,
											"end": 2654,
											"name": "SLOAD"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "DUP2"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "MSTORE"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "ADD"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "SWAP1"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "DUP2"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "MSTORE"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "ADD"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "KECCAK256"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "DUP3"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "MLOAD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "DUP2"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "EXP"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "DUP2"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SLOAD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "DUP2"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "MUL"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "NOT"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "AND"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SWAP1"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "DUP4"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "AND"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "MUL"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "OR"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SWAP1"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SSTORE"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "POP"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "DUP3"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "MLOAD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "DUP2"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SSTORE"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "DUP3"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "MLOAD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "DUP2"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SWAP1"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "DUP1"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "MLOAD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SWAP1"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SWAP1"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SWAP3"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SWAP2"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SWAP1"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "JUMPDEST"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "POP"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "SWAP1"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "POP"
										},
										{
											"begin": 2638,
											"end": 2740,
											"name": "POP"
										},
										{
											"begin": 2750,
											"end": 2762,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "SLOAD"
										},
										{
											"begin": 2750,
											"end": 2775,
											"name": "SWAP1"
										},
										{
											"begin": 2750,
											"end": 2775,
											"name": "POP"
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2785,
											"end": 2795,
											"name": "DUP1"
										},
										{
											"begin": 2785,
											"end": 2795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "DUP3"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "DUP3"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "SLOAD"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "ADD"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "SWAP3"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "POP"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "POP"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "DUP2"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "SWAP1"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "SSTORE"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "POP"
										},
										{
											"begin": 2829,
											"end": 2833,
											"name": "DUP1"
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2825,
											"name": "DUP8"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "DUP2"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "MSTORE"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "ADD"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "DUP2"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "MSTORE"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "ADD"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "KECCAK256"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "DUP2"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "SSTORE"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "POP"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "PUSH",
											"value": "AAF69FFC30AD71BE68C47171203A5FEB746C3881D2DC180DBBAC3893A57C6A44"
										},
										{
											"begin": 2860,
											"end": 2864,
											"name": "DUP2"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "MLOAD"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "DUP1"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "DUP3"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "DUP2"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "MSTORE"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "ADD"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "SWAP2"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "POP"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "POP"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "MLOAD"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "DUP1"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "SWAP2"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "SUB"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "SWAP1"
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "LOG1"
										},
										{
											"begin": 2882,
											"end": 2886,
											"name": "DUP1"
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "SWAP3"
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "POP"
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "POP"
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP3"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "SWAP2"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "POP"
										},
										{
											"begin": 1983,
											"end": 2893,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "SLOAD"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "DUP2"
										},
										{
											"begin": 1070,
											"end": 1095,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "JUMPDEST"
										},
										{
											"begin": 3181,
											"end": 3185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3245,
											"name": "DUP2"
										},
										{
											"begin": 3208,
											"end": 3217,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3223,
											"name": "DUP1"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3229,
											"name": "DUP7"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "DUP2"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "MSTORE"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "SWAP1"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "DUP2"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "MSTORE"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "KECCAK256"
										},
										{
											"begin": 3218,
											"end": 3235,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3218,
											"end": 3235,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3235,
											"name": "SLOAD"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "DUP2"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "MSTORE"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "ADD"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "SWAP1"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "DUP2"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "MSTORE"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "ADD"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "KECCAK256"
										},
										{
											"begin": 3208,
											"end": 3236,
											"name": "SLOAD"
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "EQ"
										},
										{
											"begin": 3201,
											"end": 3245,
											"name": "SWAP1"
										},
										{
											"begin": 3201,
											"end": 3245,
											"name": "POP"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SWAP2"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3102,
											"end": 3252,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "JUMPDEST"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "MSTORE"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "MSTORE"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "KECCAK256"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP2"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "POP"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "POP"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "ADD"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SLOAD"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "EXP"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DIV"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "AND"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "ADD"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SLOAD"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "POP"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "DUP3"
										},
										{
											"begin": 985,
											"end": 1022,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "JUMPDEST"
										},
										{
											"begin": 3560,
											"end": 3576,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "DUP1"
										},
										{
											"begin": 3605,
											"end": 3610,
											"name": "DUP4"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "DUP2"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "MSTORE"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "ADD"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "SWAP1"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "DUP2"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "MSTORE"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "ADD"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "KECCAK256"
										},
										{
											"begin": 3599,
											"end": 3622,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3599,
											"end": 3622,
											"name": "ADD"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SLOAD"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "MUL"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "ADD"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "MLOAD"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SWAP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP2"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "ADD"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "MSTORE"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SWAP3"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SWAP2"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SWAP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP2"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP2"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "MSTORE"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "ADD"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP3"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SLOAD"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "ISZERO"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "JUMPI"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "MUL"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP3"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "ADD"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SWAP2"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SWAP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "MSTORE"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "KECCAK256"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SWAP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "JUMPDEST"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP2"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SLOAD"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP2"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "MSTORE"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "ADD"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SWAP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "ADD"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SWAP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "DUP4"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "GT"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "JUMPI"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "JUMPDEST"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "POP"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "POP"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "POP"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "POP"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "POP"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "SWAP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP2"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "SWAP1"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3629,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP3"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SLOAD"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP3"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP3"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SSTORE"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "MSTORE"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "KECCAK256"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP2"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "ADD"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP3"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP3"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "ISZERO"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPI"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP2"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "MUL"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP3"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "ADD"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP3"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP2"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "GT"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "ISZERO"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPI"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP3"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "MLOAD"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP3"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SSTORE"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP2"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "ADD"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP2"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "ADD"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMP"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "POP"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "POP"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP2"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "POP"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP2"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP3"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "GT"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "ISZERO"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPI"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "DUP2"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SSTORE"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "POP"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "ADD"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMP"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "POP"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMP"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "SWAP1"
										},
										{
											"begin": 157,
											"end": 3632,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getprecedents(uint256)": "97add3a5",
							"isLastStep(uint256)": "6f0e823d",
							"lastSteps(uint256)": "3b37986e",
							"newStep(uint256,uint256[])": "5f63690c",
							"steps(uint256)": "7217e0b9",
							"totalSteps()": "6931b3ae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"step\",\"type\":\"uint256\"}],\"name\":\"StepCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_step\",\"type\":\"uint256\"}],\"name\":\"getprecedents\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_step\",\"type\":\"uint256\"}],\"name\":\"isLastStep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lastSteps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_item\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_precedents\",\"type\":\"uint256[]\"}],\"name\":\"newStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"steps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"item\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSteps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alberto Cuesta Canada\",\"methods\":{\"getprecedents(uint256)\":{\"params\":{\"_step\":\"The step id of the step to retrieve precedents for.\"},\"return\":\"An array with the step ids of the precedent steps.\"},\"isLastStep(uint256)\":{\"params\":{\"_step\":\"The step id of the step to verify.\"},\"return\":\"Whether a step is the last of an item.\"},\"newStep(uint256,uint256[])\":{\"params\":{\"_item\":\"The item id that this step is for. This must be either the item of one of the steps in _precedents, or an id that has never been used before.\",\"_precedents\":\"An array of the step ids for steps considered to be predecessors to this one. Often this would  just mean that the event refers to the same asset as the event  pointed to, but for other steps it could point to other different assets.\"},\"return\":\"The step id of the step created.\"}},\"title\":\"Supply Chain\"},\"userdoc\":{\"methods\":{\"getprecedents(uint256)\":{\"notice\":\"A method to retrieve the precedents of a step.\"},\"isLastStep(uint256)\":{\"notice\":\"A method to verify whether a step is the last of an  item.\"},\"newStep(uint256,uint256[])\":{\"notice\":\"A method to create a new supply chain step. The  msg.sender is recorded as the creator of the step, which might possibly mean creator of the underlying asset as well.\"}},\"notice\":\"Implements a basic compositional supply chain contract.\"}},\"settings\":{\"compilationTarget\":{\"example-code.sol\":\"SupplyChain\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"example-code.sol\":{\"keccak256\":\"0xabc2eebaca5e98208f1927eae7111affcabfe6c99df7126fa569b173fb1a0a53\",\"urls\":[\"bzz-raw://3202edb3444556fe58cd3cadb9821e581ed504b07d599f3771869f3ff577c5d5\",\"dweb:/ipfs/QmT4wFyA4ckRxmh3ffRVffpQ519WPYifEMKWLvTBLZM2G3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 17,
								"contract": "example-code.sol:SupplyChain",
								"label": "steps",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(Step)13_storage)"
							},
							{
								"astId": 19,
								"contract": "example-code.sol:SupplyChain",
								"label": "totalSteps",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "example-code.sol:SupplyChain",
								"label": "lastSteps",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint256,t_struct(Step)13_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct SupplyChain.Step)",
								"numberOfBytes": "32",
								"value": "t_struct(Step)13_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Step)13_storage": {
								"encoding": "inplace",
								"label": "struct SupplyChain.Step",
								"members": [
									{
										"astId": 7,
										"contract": "example-code.sol:SupplyChain",
										"label": "creator",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 9,
										"contract": "example-code.sol:SupplyChain",
										"label": "item",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 12,
										"contract": "example-code.sol:SupplyChain",
										"label": "precedents",
										"offset": 0,
										"slot": "2",
										"type": "t_array(t_uint256)dyn_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"getprecedents(uint256)": {
								"notice": "A method to retrieve the precedents of a step."
							},
							"isLastStep(uint256)": {
								"notice": "A method to verify whether a step is the last of an  item."
							},
							"newStep(uint256,uint256[])": {
								"notice": "A method to create a new supply chain step. The  msg.sender is recorded as the creator of the step, which might possibly mean creator of the underlying asset as well."
							}
						},
						"notice": "Implements a basic compositional supply chain contract."
					}
				}
			}
		},
		"sources": {
			"example-code.sol": {
				"ast": {
					"absolutePath": "example-code.sol",
					"exportedSymbols": {
						"SupplyChain": [
							164
						]
					},
					"id": 165,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Supply Chain\n@author Alberto Cuesta Canada\n@notice Implements a basic compositional supply chain contract.",
							"fullyImplemented": true,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "SupplyChain",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 5,
									"name": "StepCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"name": "step",
												"nodeType": "VariableDeclaration",
												"scope": 5,
												"src": "202:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "201:14:0"
									},
									"src": "184:32:0"
								},
								{
									"canonicalName": "SupplyChain.Step",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 7,
											"name": "creator",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "755:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 6,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "755:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"name": "item",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "780:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "780:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"name": "precedents",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "802:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 11,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "802:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Step",
									"nodeType": "StructDefinition",
									"scope": 164,
									"src": "733:96:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 17,
									"name": "steps",
									"nodeType": "VariableDeclaration",
									"scope": 164,
									"src": "985:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Step_$13_storage_$",
										"typeString": "mapping(uint256 => struct SupplyChain.Step)"
									},
									"typeName": {
										"id": 16,
										"keyType": {
											"id": 14,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "993:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "985:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Step_$13_storage_$",
											"typeString": "mapping(uint256 => struct SupplyChain.Step)"
										},
										"valueType": {
											"contractScope": null,
											"id": 15,
											"name": "Step",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 13,
											"src": "1004:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Step_$13_storage_ptr",
												"typeString": "struct SupplyChain.Step"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSteps",
									"nodeType": "VariableDeclaration",
									"scope": 164,
									"src": "1070:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1070:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "lastSteps",
									"nodeType": "VariableDeclaration",
									"scope": 164,
									"src": "1207:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1215:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1207:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1226:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2089:804:0",
										"statements": [
											{
												"body": {
													"id": 53,
													"nodeType": "Block",
													"src": "2144:137:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 46,
																					"name": "_precedents",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 28,
																					"src": "2194:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 48,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 47,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 34,
																					"src": "2206:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2194:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 45,
																			"name": "isLastStep",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "2183:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (uint256) view returns (bool)"
																			}
																		},
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2183:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "417070656e64206f6e6c79206f6e206c6173742073746570732e",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2228:28:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_391ac43502d2308a20b8bfa668704c1e006b30e4be58f998f9c3211c9aa8835b",
																			"typeString": "literal_string \"Append only on last steps.\""
																		},
																		"value": "Append only on last steps."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_391ac43502d2308a20b8bfa668704c1e006b30e4be58f998f9c3211c9aa8835b",
																			"typeString": "literal_string \"Append only on last steps.\""
																		}
																	],
																	"id": 44,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		182,
																		183
																	],
																	"referencedDeclaration": 183,
																	"src": "2158:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2158:112:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 52,
															"nodeType": "ExpressionStatement",
															"src": "2158:112:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 37,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2116:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 38,
															"name": "_precedents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2120:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2120:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2116:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"initializationExpression": {
													"assignments": [
														34
													],
													"declarations": [
														{
															"constant": false,
															"id": 34,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 54,
															"src": "2104:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 33,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2104:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 36,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2113:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2104:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2140:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 41,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "2140:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 43,
													"nodeType": "ExpressionStatement",
													"src": "2140:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2099:182:0"
											},
											{
												"assignments": [
													56
												],
												"declarations": [
													{
														"constant": false,
														"id": 56,
														"name": "repeatInstance",
														"nodeType": "VariableDeclaration",
														"scope": 131,
														"src": "2290:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 55,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2290:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2312:5:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:27:0"
											},
											{
												"body": {
													"id": 85,
													"nodeType": "Block",
													"src": "2372:142:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 70,
																			"name": "steps",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 17,
																			"src": "2390:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Step_$13_storage_$",
																				"typeString": "mapping(uint256 => struct SupplyChain.Step storage ref)"
																			}
																		},
																		"id": 74,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 71,
																				"name": "_precedents",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "2396:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 73,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 72,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 60,
																				"src": "2408:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2396:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2390:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Step_$13_storage",
																			"typeString": "struct SupplyChain.Step storage ref"
																		}
																	},
																	"id": 75,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "item",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "2390:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 76,
																	"name": "_item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "2420:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2390:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 84,
															"nodeType": "IfStatement",
															"src": "2386:118:0",
															"trueBody": {
																"id": 83,
																"nodeType": "Block",
																"src": "2427:77:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 78,
																				"name": "repeatInstance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 56,
																				"src": "2445:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "74727565",
																				"id": 79,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2462:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "2445:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 81,
																		"nodeType": "ExpressionStatement",
																		"src": "2445:21:0"
																	},
																	{
																		"id": 82,
																		"nodeType": "Break",
																		"src": "2484:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 63,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "2344:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 64,
															"name": "_precedents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2348:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2348:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2344:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 86,
												"initializationExpression": {
													"assignments": [
														60
													],
													"declarations": [
														{
															"constant": false,
															"id": 60,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 86,
															"src": "2332:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 59,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2332:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 62,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2341:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2332:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2368:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 67,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "2368:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 69,
													"nodeType": "ExpressionStatement",
													"src": "2368:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2327:187:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2527:15:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 87,
														"name": "repeatInstance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2528:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 99,
												"nodeType": "IfStatement",
												"src": "2523:98:0",
												"trueBody": {
													"id": 98,
													"nodeType": "Block",
													"src": "2543:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 90,
																				"name": "lastSteps",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 23,
																				"src": "2565:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 92,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 91,
																				"name": "_item",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 25,
																				"src": "2575:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2565:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 93,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2585:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2565:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "496e7374616e6365206e6f742076616c69642e",
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2588:21:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0d43e013093ed7245d15533c0ee59771ce583fffe7e3e24d2b55049dfe38ed42",
																			"typeString": "literal_string \"Instance not valid.\""
																		},
																		"value": "Instance not valid."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_0d43e013093ed7245d15533c0ee59771ce583fffe7e3e24d2b55049dfe38ed42",
																			"typeString": "literal_string \"Instance not valid.\""
																		}
																	],
																	"id": 89,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		182,
																		183
																	],
																	"referencedDeclaration": 183,
																	"src": "2557:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2557:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 97,
															"nodeType": "ExpressionStatement",
															"src": "2557:53:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 100,
															"name": "steps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "2638:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Step_$13_storage_$",
																"typeString": "mapping(uint256 => struct SupplyChain.Step storage ref)"
															}
														},
														"id": 102,
														"indexExpression": {
															"argumentTypes": null,
															"id": 101,
															"name": "totalSteps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "2644:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2638:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Step_$13_storage",
															"typeString": "struct SupplyChain.Step storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "2676:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2676:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"argumentTypes": null,
																"id": 106,
																"name": "_item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 107,
																"name": "_precedents",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "2719:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															],
															"id": 103,
															"name": "Step",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "2658:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Step_$13_storage_ptr_$",
																"typeString": "type(struct SupplyChain.Step storage pointer)"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2658:82:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Step_$13_memory",
															"typeString": "struct SupplyChain.Step memory"
														}
													},
													"src": "2638:102:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Step_$13_storage",
														"typeString": "struct SupplyChain.Step storage ref"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "2638:102:0"
											},
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"name": "step",
														"nodeType": "VariableDeclaration",
														"scope": 131,
														"src": "2750:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2750:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"argumentTypes": null,
													"id": 113,
													"name": "totalSteps",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "2765:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2750:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 115,
														"name": "totalSteps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2785:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2799:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2785:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2785:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 119,
															"name": "lastSteps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2810:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 121,
														"indexExpression": {
															"argumentTypes": null,
															"id": 120,
															"name": "_item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2820:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2810:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 122,
														"name": "step",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "2829:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2810:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2810:23:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 126,
															"name": "step",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2860:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 125,
														"name": "StepCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2848:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "EmitStatement",
												"src": "2843:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 129,
													"name": "step",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "2882:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 32,
												"id": 130,
												"nodeType": "Return",
												"src": "2875:11:0"
											}
										]
									},
									"documentation": "@notice A method to create a new supply chain step. The \nmsg.sender is recorded as the creator of the step, which might\npossibly mean creator of the underlying asset as well.\n@param _item The item id that this step is for. This must be\neither the item of one of the steps in _precedents, or an id\nthat has never been used before.\n@param _precedents An array of the step ids for steps\nconsidered to be predecessors to this one. Often this would \njust mean that the event refers to the same asset as the event \npointed to, but for other steps it could point to other\ndifferent assets.\n@return The step id of the step created.",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "newStep",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "_item",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2000:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"name": "_precedents",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2015:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 26,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 27,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2015:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1999:45:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2076:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2075:9:0"
									},
									"scope": 164,
									"src": "1983:910:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "3191:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 139,
															"name": "lastSteps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "3208:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 144,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 140,
																	"name": "steps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "3218:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Step_$13_storage_$",
																		"typeString": "mapping(uint256 => struct SupplyChain.Step storage ref)"
																	}
																},
																"id": 142,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 141,
																	"name": "_step",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "3224:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3218:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Step_$13_storage",
																	"typeString": "struct SupplyChain.Step storage ref"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "item",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "3218:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3208:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 145,
														"name": "_step",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "3240:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3208:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 138,
												"id": 147,
												"nodeType": "Return",
												"src": "3201:44:0"
											}
										]
									},
									"documentation": "@notice A method to verify whether a step is the last of an \nitem.\n@param _step The step id of the step to verify.\n@return Whether a step is the last of an item.",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isLastStep",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "_step",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3122:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3121:15:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3181:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3181:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3180:6:0"
									},
									"scope": 164,
									"src": "3102:150:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "3582:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 157,
															"name": "steps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "3599:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Step_$13_storage_$",
																"typeString": "mapping(uint256 => struct SupplyChain.Step storage ref)"
															}
														},
														"id": 159,
														"indexExpression": {
															"argumentTypes": null,
															"id": 158,
															"name": "_step",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "3605:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3599:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Step_$13_storage",
															"typeString": "struct SupplyChain.Step storage ref"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "precedents",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 12,
													"src": "3599:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 156,
												"id": 161,
												"nodeType": "Return",
												"src": "3592:30:0"
											}
										]
									},
									"documentation": "@notice A method to retrieve the precedents of a step.\n@param _step The step id of the step to retrieve precedents\nfor.\n@return An array with the step ids of the precedent steps.",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getprecedents",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "_step",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3501:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3500:15:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3560:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 153,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 154,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3560:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3559:18:0"
									},
									"scope": 164,
									"src": "3478:151:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 165,
							"src": "157:3475:0"
						}
					],
					"src": "0:3632:0"
				},
				"id": 0
			}
		}
	}
}